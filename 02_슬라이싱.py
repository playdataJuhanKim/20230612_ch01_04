#슬라이싱
#시퀀스 객체의 일부를 잘라내는것. -> 현실과는 다르게 원본에는 영향을 미치지 않는다.
#시퀀스객체[시작인덱스:끝인덱스] #끝 인덱스번호는 포함하지 않음.

a=list(range(0,100,10))

print(a[3:8])

#슬라이싱에서 끝인덱스는 해당되지 않는다.
b=[1,2,3,4,5]
print(b[0:5])
print(b[0:3500])
print(b[0:])      #위 3개 모두 동일함

a=[4,5,6,7,8,9,10]
print(a[0])
print(type(a[0]))
print(a[0:1])
print(type(a[0:1]))  #a[0] ->인덱스도 일종의 슬라이싱인지 궁금했는데 다르단 것을 알게 됨.

print(a[4:4])

print(a[-2:1]) #빈 리스트가 나옴
print(a[-5:-1]) #음수 인덱스로는 전체를 슬라이싱할 수 없음.

#슬라이싱은 range와 비슷한 성질을 다수 가지고 있다. ->range의 증감폭처럼 건너뛰어서 슬라이싱 할 수 있음.
print(a[1:9:2])
print(a[0:300:3])
print(a[5:1:-1])
print(a[-7:-3:-1])
print(a[-3:-7:-1])

#슬라이스에서 인덱스([])를 생략하는 방법이 있음.
'''
슬라이스를 할 때 시작인덱스나 끝 인덱스 혹은 전부 생략할 수 있음
인덱스를 생략하게 되면 시퀀스 전체의 길이를 몰라도 끝까지 지정이 된다.
시퀀스[:n], 시퀀스[n:] -> 시퀀스[0:n], 시퀀스[n:len(시퀀스)]와 동일
'''

print(a[::-1]) #거꾸로 뒤집힘. ::-1
print(a[::2])

print(a[-2:1:-1])



ant='개미는 오늘도 열심히 일을 하네'
print(ant[::-1])  #네하 을일 히심열 도늘오 는미개 ->문자열도 손쉽게 뒤집을 수 있다.
